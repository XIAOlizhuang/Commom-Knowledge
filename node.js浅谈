javaScript单线程执行机制

    1、 首先解释下，单线程和多线程。
     什么是单线程？单线程就是一个进程中只有一个线程。程序顺序执行，前面的执行完，才会执行后面的程序。
     什么是多线程？多线程就是一个进程中只有多个线程。在进程内部进行线程间的切换，由于每个线程执行的时间片很短，所以在感觉上是并行的。

    2、那么为什么感觉上javaScript是多线程？而且还支持AJAX异步呢？AJAX是真正的异步吗？
     先说明，从哪里可以得出javaScript是单线程。比如你页面一上来就alert（“hello world~”）；只要你不关闭这个对话框，后续的js代码就不会再执行。因为，单线程就是这样一步一步的顺次执行，前面不执行完，后面不会执行。也就是说，在具体的某一时刻，只有一段代码在执行。
     可是，JavaScript明明可以处理各种触发事件，感觉上是异步多线程啊。其实，它的原理是这样的，JavaScript单线程的执行浏览器的一个事件队列，要执行的函数和触发事件的回调函数都被放在这个队列中。比如，我点击率一下按钮，之后又将浏览器缩小了，那么这两个事件的回调函数就会顺次地被放在当前执行的“函数”之后，再一一执行。
     那么，既然JavaScript是单线程，那么如何维护这个函数队列呢，他分身无术啊。这时候，就需要知道，浏览器可不是单线程。虽然，每一个window只有一个js引擎，但是浏览器是事件驱动的、异步的、多线程的。
            浏览器内部有一个事件轮询（event loop），是一个大的内部消息循环，会轮询大的消息队列，并执行。也就是js要处理的事件队列，是浏览器维护的。
            浏览器至少有四个线程（不同浏览器会有差异）： js引擎线程、界面渲染线程、浏览器事件触发线程、http请求线程。
     其实，到这里就说的很明白了。但是，又想到了延时函数（setTimeout）的例子，感觉上，因为没有阻塞执行，会感觉是异步，其实并不是。只是，js在执行到延时函数时，会触发浏览器的定时器，到设置时间，浏览器再将这个函数放入执行的函数队列，再由JavaScript引擎执行。都是在浏览器空闲了才会执行。
     关于AJAX的异步，是真正的异步。同样的道理，在调用AJAX的时候，浏览器会开辟一个新的线程，去处理这个请求，得到响应后，如果这个请求有回调，会将这个回调再放入事件队列中。再由JavaScript引擎执行。

    3、关于JavaScript的阻塞
    浏览器虽然是多线程，但是由于JavaScript具有阻塞特性，无论外链还是内嵌脚本，在浏览器执行解释js脚本的时候，浏览器是不会去做别的事情的，比如渲染页面，而是直到js下载并执行完毕。
    这样，js脚本的下载、解释执行，会反该页面的继续绘制，给用户带来不良的体验。所以，要对其优化，有如下几点：
             a、将<script>内嵌和外链，在可以的情况下，放在<body>底部。注：对于css，浏览器是并行下载
             b、在页面onload后，加载js
             c、html5 <script>标签的defer属性，在页面加载完成后下载
             d、使用创建<script>标签的方式，在页面加载完成后添加进去。
    注：解决阻塞就是一句话，先让页面渲染完，再加载js。
进程与线程。js是什么运行机制？node.js是什么运行机制？
    
六、Node.js单线程执行机制

    脑子就像有问题一样。js都是单线程的了，node.js就是js实现的，还能是多线程？！！呵呵哒~
    Node.js其实还不是真正意义上的js,他是借用了js语法实现的，达到真正意义的非阻塞服务端语言。但是他的运行机制，也是事件轮询 （Event Loop）。
            

参考文献：
【1】http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html 进程与线程的一个简单解释
【2】http://www.cnblogs.com/CareySon/archive/2012/05/04/ProcessAndThread.html 操作系统中的进程与线程
【3】http://blog.csdn.net/douglax/article/details/1532258 多线程与单线程的区别
【4】http://www.cnblogs.com/Mainz/p/3552717.html Javascript是单线程的深入分析
【5】http://www.cnblogs.com/MeteorSeed/articles/2283629.html JS学习笔记（一）——JS的阻塞特性
【6】http://www.ruanyifeng.com/blog/2014/10/event-loop.html JavaScript 运行机制详解：再谈Event Loop
【7*】http://blog.getify.com/promises-part-1/ Promises: The Sync Problem (part 1)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

@老姚 ^_^~ 感谢指点，特加到文章中，分享出来。2016/03/24 补充：

1、事件队列里到底放的是什么？会放主线程普通函数吗？
    事件队列里放的，可以理解是那些得到了返回结果的异步操作的回调函数，在事件队列中等待系统调用到js栈中执行。事件队列也可以是有返回结果的用户的操作，如点击、页面滚动。是不会放主线程的普通函数的。因为主线程的普通函数。是直接在js栈中，被依次执行了的。
2、函数是最小的执行单位吗？
    函数时JS的最小执行单位（我推断，因为，系统得分配地址，他自己也会有自己的上下文巴拉巴拉的，再细分下去，恐怕系统也不会好分配）。
3、任务可并发吗？并发如何处理？
    任务不可并行，但是是可以并发的，并发的处理办法是异步。
